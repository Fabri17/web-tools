---
// Features section - Display tools in a modern grid
interface Tool {
	title: string;
	description: string;
	icon: string;
	href: string;
	tags: string[];
	comingSoon: boolean;
}

interface Props {
	tools: Tool[];
}

const { tools } = Astro.props;
const activeTools = tools.filter(t => !t.comingSoon);
const upcomingTools = tools.filter(t => t.comingSoon);
---

<section id="herramientas" class="features-section">
	<div class="features-container">
		<div class="section-header">
			<h2 class="section-title">Herramientas <span class="gradient-text">Disponibles</span></h2>
			<p class="section-subtitle">
				Todo lo que necesitas para ser más productivo, sin distracciones
			</p>
		</div>
		
		<div id="herramientas-disponibles" class="tools-grid">
			{activeTools.map((tool, index) => (
				<a 
					href={tool.href} 
					class="tool-card"
					style={`animation-delay: ${index * 0.1}s`}
				>
					<div class="tool-icon" set:html={tool.icon} />
					<div class="tool-content">
						<h3 class="tool-title">{tool.title}</h3>
						<p class="tool-description">{tool.description}</p>
						<div class="tool-tags">
							{tool.tags.slice(0, 3).map(tag => (
								<span class="tool-tag">{tag}</span>
							))}
						</div>
					</div>
					<div class="tool-arrow">
						<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M5 12h14M12 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
					</div>
					<div class="tool-status">
						<span class="status-badge active">Activa</span>
					</div>
				</a>
			))}
		</div>
		
		{upcomingTools.length > 0 && (
			<div class="upcoming-section">
				<h3 class="upcoming-title">
					<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 2v20M17 7H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
					</svg>
					Próximamente
				</h3>
				<div class="tools-grid upcoming">
					{upcomingTools.map((tool, index) => (
						<div 
							class="tool-card upcoming-card"
							style={`animation-delay: ${(activeTools.length + index) * 0.1}s`}
						>
							<div class="tool-icon disabled" set:html={tool.icon} />
							<div class="tool-content">
								<h3 class="tool-title">{tool.title}</h3>
								<p class="tool-description">{tool.description}</p>
								<div class="tool-tags">
									{tool.tags.slice(0, 3).map(tag => (
										<span class="tool-tag">{tag}</span>
									))}
								</div>
							</div>
							<div class="tool-status">
								<span class="status-badge upcoming">Próximamente</span>
							</div>
						</div>
					))}
				</div>
			</div>
		)}
	</div>
</section>

<style>
	.features-section {
		padding: 6rem 2rem;
		background: #f8fafc;
		position: relative;
	}
	
	:global(.dark-mode) .features-section {
		background: #0f172a;
	}
	
	.features-container {
		max-width: 1400px;
		margin: 0 auto;
	}
	
	.section-header {
		text-align: center;
		margin-bottom: 4rem;
	}
	
	.section-title {
		font-size: clamp(2.5rem, 4vw, 3.5rem);
		font-weight: 800;
		margin: 0 0 1rem 0;
		color: #1a202c;
	}
	
	:global(.dark-mode) .section-title {
		color: #f8fafc;
	}
	
	.gradient-text {
		background: linear-gradient(90deg, #667eea, #764ba2);
		-webkit-background-clip: text;
		background-clip: text;
		-webkit-text-fill-color: transparent;
	}
	
	.section-subtitle {
		font-size: 1.25rem;
		color: #64748b;
		max-width: 600px;
		margin: 0 auto;
	}
	
	:global(.dark-mode) .section-subtitle {
		color: #94a3b8;
	}
	
	.tools-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
		gap: 2rem;
		margin-bottom: 4rem;
	}
	
	.tool-card {
		position: relative;
		background: white;
		border-radius: 20px;
		padding: 2rem;
		text-decoration: none;
		color: inherit;
		transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
		border: 2px solid transparent;
		cursor: pointer;
		overflow: hidden;
		animation: fadeInUp 0.6s ease-out both;
	}
	
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	
	:global(.dark-mode) .tool-card {
		background: #1e293b;
	}
	
	.tool-card::before {
		content: '';
		position: absolute;
		inset: 0;
		border-radius: 20px;
		padding: 2px;
		background: linear-gradient(135deg, #667eea, #764ba2);
		-webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
		mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
		-webkit-mask-composite: xor;
		mask-composite: exclude;
		opacity: 0;
		transition: opacity 0.4s ease;
	}
	
	.tool-card:hover::before {
		opacity: 1;
	}
	
	.tool-card:hover {
		transform: translateY(-8px);
		box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
	}
	
	:global(.dark-mode) .tool-card:hover {
		box-shadow: 0 20px 40px rgba(102, 126, 234, 0.4);
	}
	
	.tool-icon {
		width: 64px;
		height: 64px;
		background: linear-gradient(135deg, #667eea, #764ba2);
		border-radius: 16px;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-bottom: 1.5rem;
		transition: all 0.4s ease;
	}
	
	.tool-card:hover .tool-icon {
		transform: scale(1.1) rotate(5deg);
	}
	
	.tool-icon.disabled {
		background: #e2e8f0;
		opacity: 0.5;
	}
	
	:global(.dark-mode) .tool-icon.disabled {
		background: #334155;
	}
	
	.tool-content {
		flex: 1;
	}
	
	.tool-title {
		font-size: 1.5rem;
		font-weight: 700;
		margin: 0 0 0.75rem 0;
		color: #1a202c;
	}
	
	:global(.dark-mode) .tool-title {
		color: #f8fafc;
	}
	
	.tool-description {
		font-size: 1rem;
		color: #64748b;
		line-height: 1.6;
		margin: 0 0 1.5rem 0;
	}
	
	:global(.dark-mode) .tool-description {
		color: #94a3b8;
	}
	
	.tool-tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
	}
	
	.tool-tag {
		padding: 0.375rem 0.75rem;
		background: #f1f5f9;
		color: #475569;
		border-radius: 8px;
		font-size: 0.875rem;
		font-weight: 500;
	}
	
	:global(.dark-mode) .tool-tag {
		background: #334155;
		color: #cbd5e1;
	}
	
	.tool-arrow {
		position: absolute;
		top: 2rem;
		right: 2rem;
		width: 40px;
		height: 40px;
		background: #f1f5f9;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		color: #667eea;
		opacity: 0;
		transform: translate(10px, -10px);
		transition: all 0.4s ease;
	}
	
	:global(.dark-mode) .tool-arrow {
		background: #334155;
	}
	
	.tool-card:hover .tool-arrow {
		opacity: 1;
		transform: translate(0, 0);
	}
	
	.tool-status {
		margin-top: 1rem;
	}
	
	.status-badge {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.375rem 0.75rem;
		border-radius: 20px;
		font-size: 0.875rem;
		font-weight: 600;
	}
	
	.status-badge.active {
		background: #dcfce7;
		color: #16a34a;
	}
	
	:global(.dark-mode) .status-badge.active {
		background: rgba(22, 163, 74, 0.2);
		color: #4ade80;
	}
	
	.status-badge.upcoming {
		background: #fef3c7;
		color: #d97706;
	}
	
	:global(.dark-mode) .status-badge.upcoming {
		background: rgba(217, 119, 6, 0.2);
		color: #fbbf24;
	}
	
	.status-badge.active::before {
		content: '';
		width: 8px;
		height: 8px;
		background: #16a34a;
		border-radius: 50%;
		animation: pulse-green 2s ease-in-out infinite;
	}
	
	:global(.dark-mode) .status-badge.active::before {
		background: #4ade80;
	}
	
	@keyframes pulse-green {
		0%, 100% { opacity: 1; }
		50% { opacity: 0.5; }
	}
	
	.upcoming-section {
		margin-top: 4rem;
	}
	
	.upcoming-title {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		font-size: 1.75rem;
		font-weight: 700;
		margin: 0 0 2rem 0;
		color: #1a202c;
	}
	
	:global(.dark-mode) .upcoming-title {
		color: #f8fafc;
	}
	
	.upcoming-title svg {
		color: #fbbf24;
	}
	
	.upcoming-card {
		cursor: default;
		opacity: 0.7;
	}
	
	.upcoming-card:hover {
		transform: translateY(-4px);
	}
	
	@media (max-width: 768px) {
		.features-section {
			padding: 4rem 1.5rem;
		}
		
		.tools-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}
		
		.section-header {
			margin-bottom: 3rem;
		}
	}
</style>

---
interface Props {
  title: string;
  subtitle: string;
  icon: string;
  primaryButtonText?: string;
  primaryButtonId?: string;
  showPrimaryButton?: boolean;
  toolHref?: string; // Para identificar la herramienta en favoritos
}

const {
  title,
  subtitle,
  icon,
  primaryButtonText = "Generar",
  primaryButtonId = "primaryBtn",
  showPrimaryButton = true,
  toolHref = Astro.url.pathname,
} = Astro.props;

// Preparar datos de la herramienta para favoritos
const toolData = JSON.stringify({
  title,
  href: toolHref,
  icon,
});
---

<div class="header">
  <div class="header-content">
    <a href="/" class="back-button" title="Volver al inicio">
      <svg
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M19 12H5M5 12L12 19M5 12L12 5"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
      <span class="back-text">Inicio</span>
    </a>
    <div class="title-section">
      <div class="logo-container">
        <div class="logo-icon" set:html={icon} />
        <div class="title-text">
          <h1>{title}</h1>
          <p class="subtitle">{subtitle}</p>
        </div>
      </div>
      <button
        class="favorite-btn-header"
        data-favorite-btn
        data-tool={toolData}
        aria-label={`Agregar ${title} a favoritos`}
        title="Agregar a favoritos"
      >
        <svg
          class="star-outline"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z"
            stroke="currentColor"
            stroke-width="2"
            stroke-linejoin="round"></path>
        </svg>
        <svg
          class="star-filled"
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z"
          ></path>
        </svg>
      </button>
    </div>
    {
      showPrimaryButton && (
        <button id={primaryButtonId} class="btn-primary">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 16L7 11L8.4 9.6L11 12.2V4H13V12.2L15.6 9.6L17 11L12 16Z"
              fill="currentColor"
            />
            <path d="M5 20V18H19V20H5Z" fill="currentColor" />
          </svg>
          {primaryButtonText}
        </button>
      )
    }
  </div>
</div>

<style>
  .header {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  .header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
    flex-wrap: wrap;
  }

  .back-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    background: white;
    border: 1px solid #e4e4e7;
    border-radius: 12px;
    color: #18181b;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s;
  }

  .back-button:hover {
    background: #f4f4f5;
    border-color: #8b5cf6;
    color: #8b5cf6;
    transform: translateX(-4px);
  }

  .title-section {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
  }

  .logo-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
  }

  .logo-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .title-text h1 {
    font-size: 1.75rem;
    color: #18181b;
    margin-bottom: 0.25rem;
  }

  .subtitle {
    color: #71717a;
    font-size: 0.95rem;
  }

  .btn-primary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 12px rgba(139, 92, 246, 0.2);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(139, 92, 246, 0.3);
  }

  .btn-primary:active {
    transform: translateY(0);
  }

  .btn-primary:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  @media (max-width: 768px) {
    .header {
      padding: 1.25rem;
    }

    .header-content {
      flex-direction: column;
      align-items: stretch;
      gap: 1rem;
      position: relative; /* Para el botón absoluto */
    }

    /* Back button más compacto en mobile */
    .back-button {
      align-self: flex-start;
      padding: 0.625rem 1rem;
    }

    .back-text {
      font-size: 0.875rem;
    }

    /* Title section - grid para mejor control */
    .title-section {
      display: grid;
      grid-template-columns: 1fr auto;
      gap: 0.75rem;
      align-items: start;
    }

    .logo-container {
      grid-column: 1;
      gap: 0.75rem;
    }

    .logo-icon {
      width: 40px;
      height: 40px;
      min-width: 40px;
    }

    .title-text h1 {
      font-size: 1.375rem;
      line-height: 1.3;
    }

    .subtitle {
      font-size: 0.8125rem;
    }

    /* Botón de favorito en el grid - más estable */
    .favorite-btn-header {
      grid-column: 2;
      position: relative; /* Cambiar de absolute a relative */
      align-self: start;
      padding: 0.625rem;
      margin-top: 0.25rem;
    }

    .favorite-btn-header svg {
      width: 18px;
      height: 18px;
    }

    /* Primary button full width */
    .btn-primary {
      width: 100%;
      padding: 0.875rem 1.5rem;
      font-size: 0.95rem;
      margin-top: 0.5rem;
    }
  }

  /* Dark Mode */
  :global(.dark-mode) .header {
    background: #1e293b;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  }

  :global(.dark-mode) .back-button {
    background: #0f172a;
    border-color: #334155;
    color: #f8fafc;
  }

  :global(.dark-mode) .back-button:hover {
    background: #1e293b;
    border-color: #8b5cf6;
    color: #c084fc;
  }

  :global(.dark-mode) .title-text h1 {
    color: #f8fafc;
  }

  :global(.dark-mode) .subtitle {
    color: #cbd5e1;
  }

  /* Favorite Button in Header */
  .favorite-btn-header {
    background: white;
    border: 1px solid #e4e4e7;
    border-radius: 12px;
    padding: 0.75rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    flex-shrink: 0;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  .favorite-btn-header:hover {
    transform: scale(1.1);
    border-color: #fbbf24;
    box-shadow: 0 4px 12px rgba(251, 191, 36, 0.2);
  }

  .favorite-btn-header:active {
    transform: scale(0.95);
  }

  .favorite-btn-header:focus {
    outline: 2px solid #8b5cf6;
    outline-offset: 2px;
  }

  .favorite-btn-header .star-outline {
    color: #d1d5db;
    display: block;
  }

  .favorite-btn-header .star-filled {
    color: #fbbf24;
    display: none;
  }

  .favorite-btn-header.is-favorite .star-outline {
    display: none;
  }

  .favorite-btn-header.is-favorite .star-filled {
    display: block;
    animation: starPop 0.3s ease;
  }

  @keyframes starPop {
    0% {
      transform: scale(0.8);
      opacity: 0;
    }
    50% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  :global(.dark-mode) .favorite-btn-header {
    background: #0f172a;
    border-color: #334155;
  }

  :global(.dark-mode) .favorite-btn-header:hover {
    border-color: #fbbf24;
    background: #1e293b;
  }

  :global(.dark-mode) .favorite-btn-header .star-outline {
    color: #475569;
  }
</style>

<script>
  import { isFavorite } from "../lib/favorites";

  /**
   * Actualiza el estado visual del botón de favorito en este header
   */
  function updateFavoriteButton() {
    const favoriteButton = document.querySelector("[data-favorite-btn]");

    if (favoriteButton) {
      const toolData = favoriteButton.getAttribute("data-tool");
      if (toolData) {
        try {
          const tool = JSON.parse(toolData);
          const isFav = isFavorite(tool.href);
          favoriteButton.classList.toggle("is-favorite", isFav);
        } catch (error) {
          console.error("Error updating favorite button:", error);
        }
      }
    }
  }

  // Actualizar cuando el DOM esté listo
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", updateFavoriteButton);
  } else {
    updateFavoriteButton();
  }

  // Actualizar cuando cambien los favoritos
  window.addEventListener("favoritesChanged", updateFavoriteButton);
</script>
